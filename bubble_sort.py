from timing_sort import run_sorting_algorithm
from random import randint

list_length = 1_000

# number_list = [7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10]

# number_list = [7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10, 7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10, 7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10, 7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10, 7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10, 7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10,7, 89, 17, 23, 9, 56, 34, 8, 72, 45, 67, 12, 90, 3, 6, 27, 48, 59, 81, 10]
number_list = [1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 10]

def bubble_sort(list):
    n = len(list)
    for i in range(n):

        already_sorted = True # Optimized bubble sort by letting it quit if it's alreayd sorted

        # look at each item in the list one by one and compare it to the adjacent items
        for j in range(0, n - 1 - i): # Last i elements are already sorted
            if list[j] > list[j + 1]: # If the item is greater than the one next to it we need to swap them
                list[j], list[j + 1] = list[j + 1], list[j]
                already_sorted = False # Since we made a swap (entered this condition) we know the list is not sorted, so we tick the boolean to False
    if already_sorted: # we can break out if the first inner loop doesn't swap the boolean to false because it didn't so any swaps, meaning the list was sorted when we started
        return list
    return list

def main():
    # list = [randint(0, list_length) for i in range(list_length)]
    # run_sorting_algorithm("bubble_sort", list)
    print(number_list)
    run_sorting_algorithm("bubble_sort", number_list)
    # run_sorting_algorithm("bubble_sort", number_list)
    print(bubble_sort(number_list))

if __name__ == "__main__":
    main()
